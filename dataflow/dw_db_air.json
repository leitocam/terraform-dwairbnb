{
	"name": "dw_db_air",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "air_csv",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ds_tlb_airbnb",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          City as string,",
				"          Price as double,",
				"          Day as string,",
				"          {Room Type} as string,",
				"          {Shared Room} as boolean,",
				"          {Private Room} as boolean,",
				"          {Person Capacity} as double,",
				"          Superhost as boolean,",
				"          {Multiple Rooms} as integer,",
				"          Business as boolean,",
				"          {Cleanliness Rating} as double,",
				"          {Guest Satisfaction} as double,",
				"          Bedrooms as integer,",
				"          {City Center (km)} as double,",
				"          {Metro Distance (km)} as double,",
				"          {Attraction Index} as double,",
				"          {Normalised Attraction Index} as double,",
				"          {Restraunt Index} as double,",
				"          {Normalised Restraunt Index} as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          city as string,",
				"          price as double,",
				"          day as string,",
				"          room_type as string,",
				"          shared_room as boolean,",
				"          private_room as boolean,",
				"          person_capacity as double,",
				"          superhost as boolean,",
				"          multiple_rooms as integer,",
				"          business as boolean,",
				"          cleanliness_rating as double,",
				"          guest_satisfaction as double,",
				"          bedrooms as integer,",
				"          city_center_km as double,",
				"          metro_distance_km as double,",
				"          attraction_index as double,",
				"          normalised_attraction_index as double,",
				"          restaurant_index as double,",
				"          normalised_restaurant_index as double",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          city = City,",
				"          price = Price,",
				"          day = Day,",
				"          room_type = {Room Type},",
				"          person_capacity = {Person Capacity},",
				"          cleanliness_rating = {Cleanliness Rating},",
				"          guest_satisfaction = {Guest Satisfaction},",
				"          bedrooms = Bedrooms,",
				"          city_center_km = {City Center (km)},",
				"          metro_distance_km = {Metro Distance (km)},",
				"          attraction_index = {Attraction Index},",
				"          restaurant_index = {Restraunt Index}",
				"     )) ~> sink1"
			]
		}
	}
}